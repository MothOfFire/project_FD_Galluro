{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"visitorOutMain\",\n  data() {\n    return {\n      tableData: [],\n      user: JSON.parse(sessionStorage.getItem(\"CurUser\")),\n      vname: '',\n      vsex: '',\n      vsexs: [{\n        value: '1',\n        label: '男'\n      }, {\n        value: '0',\n        label: '女'\n      }],\n      vage: '',\n      vphone: '',\n      cid: 'null',\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      outtime: '',\n      visitorForm: {\n        vname: '',\n        vsex: '1',\n        vage: '',\n        vphone: '',\n        cid: '',\n        entertime: '',\n        outtime: '',\n        status: '1'\n      }\n    };\n  },\n  methods: {\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    },\n    //将前端收到的date数据转换成标准格式\n    changeTime(date) {\n      let newDate = date.substring(0, 10);\n      let date2 = date.substring(12, 13);\n      let date4 = date.substring(13, 19);\n      let date3 = parseInt(date2) + 8;\n      let newTime = newDate + \" \" + date3 + date4;\n      return newTime;\n    },\n    loadPost() {\n      if (this.user != null && this.user.role == '2') {\n        this.$axios.post(this.$httpUrl + '/visitor/listAllPage', {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          param: {\n            vname: this.vname.trim(),\n            vsex: this.vsex\n          }\n        }).then(res => res.data).then(res => {\n          console.log(res);\n          if (res.code == 200) {\n            //设置表中游客时间\n            for (const item of res.data) {\n              console.log(this.changeTime(item.entertime));\n              if (item.entertime != null) {\n                item.entertime = this.changeTime(item.entertime);\n              }\n              if (item.outtime != null) {\n                item.outtime = this.changeTime(item.outtime);\n              }\n            }\n            this.tableData = res.data;\n            this.total = res.total;\n          } else {\n            alert(\"数据获取失败\");\n          }\n        });\n      } else {\n        this.$confirm('未登入请登录后再进入？', '提示', {\n          confirmButtonText: '确定去登入',\n          //确认按钮文字显示\n          type: 'warning',\n          center: true,\n          //文字居中\n          showCancelButton: false,\n          //不显示取消按钮\n          closeOnClickModal: false //是否可以点击空白处关闭弹窗\n        }).then(() => {\n          this.$router.push('/');\n          sessionStorage.clear();\n        }).catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"大哥哥(姐姐)快去登录吧！！\"\n          });\n        });\n      }\n    },\n    resetParam() {\n      this.vname = '';\n      this.vsex = '';\n    },\n    Out(row) {\n      //赋值到表单\n      this.visitorForm.vid = row.vid;\n      if (row.outtime == null) {\n        this.visitorForm.outtime = new Date();\n      } else {\n        this.visitorForm.outtime = row.outtime;\n      }\n      this.$axios.post(this.$httpUrl + '/visitor/outVisitor', this.visitorForm).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            showClose: true,\n            message: '数据修改成功',\n            type: 'success'\n          });\n          this.loadPost();\n        } else {\n          this.$message({\n            showClose: true,\n            message: '数据修改失败',\n            type: 'error'\n          });\n        }\n      });\n    }\n  },\n  beforeMount() {\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["name","data","tableData","user","JSON","parse","sessionStorage","getItem","vname","vsex","vsexs","value","label","vage","vphone","cid","pageNum","pageSize","total","outtime","visitorForm","entertime","status","methods","handleSizeChange","val","console","log","loadPost","handleCurrentChange","changeTime","date","newDate","substring","date2","date4","date3","parseInt","newTime","role","$axios","post","$httpUrl","param","trim","then","res","code","item","alert","$confirm","confirmButtonText","type","center","showCancelButton","closeOnClickModal","$router","push","clear","catch","$message","message","resetParam","Out","row","vid","Date","showClose","beforeMount"],"sources":["src/components/visitor/visitorOutMain.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"margin-bottom: 5px\">\r\n      <el-input v-model=\"vname\"\r\n                placeholder=\"请输入游客姓名\"\r\n                suffix-icon=\"el-icon-search\"\r\n                style=\"width: 200px\"\r\n                @keyup.enter.native=\"loadPost\"></el-input>\r\n      <el-select v-model=\"vsex\"\r\n                 filterable placeholder=\"请选择性别\"\r\n                 style=\"margin-left: 5px\">\r\n        <el-option\r\n            v-for=\"item in vsexs\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\">\r\n        </el-option>\r\n      </el-select>\r\n      <el-button type=\"primary\"\r\n                 style=\"margin-left: 5px\"\r\n                 @click=\"loadPost\">查询</el-button>\r\n      <el-button type=\"success\"\r\n                 @click=\"resetParam\">重置</el-button>\r\n    </div>\r\n    <el-table :data=\"tableData\"\r\n              :header-cell-style=\"{backgroundColor:'rgba(156,180,184,0.5)'}\"\r\n              :border=\"true\">\r\n      <el-table-column prop=\"vid\" label=\"vId\" width=\"80\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"vname\" label=\"游客姓名\" width=\"120\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"vphone\" label=\"联系方式\" width=\"160\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"vsex\" label=\"性别\" width=\"80\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag\r\n              :type=\"scope.row.vsex === '1' ? 'primary' : 'success'\"\r\n              disable-transitions>{{scope.row.vsex === '1' ? '男' : '女'}}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"vage\" label=\"年龄\" width=\"80\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"cid\" label=\"车位号\" width=\"80\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"entertime\" label=\"进园时间\" width=\"180\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"outtime\" label=\"出园时间\" width=\"180\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"status\" label=\"是否在园内\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag\r\n              :type=\"scope.row.status === '1' ? 'primary' : 'success'\"\r\n              disable-transitions>{{scope.row.status === '1' ? '已出园' : '还在园内'}}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"operate\" label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"small\"\r\n                     type=\"success\"\r\n                     @click=\"Out(scope.row)\">出园</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!--分页组件-->\r\n    <el-pagination\r\n        style=\"margin-top: 15px\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pageNum\"\r\n        :page-sizes=\"[ 5, 10, 15,20]\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"visitorOutMain\",\r\n  data(){\r\n    return{\r\n      tableData:[],\r\n      user : JSON.parse(sessionStorage.getItem(\"CurUser\")),\r\n      vname:'',\r\n      vsex:'',\r\n      vsexs:[\r\n        {\r\n          value: '1',\r\n          label: '男'\r\n        }, {\r\n          value: '0',\r\n          label: '女'\r\n        }\r\n      ],\r\n      vage:'',\r\n      vphone:'',\r\n      cid:'null',\r\n      pageNum:1,\r\n      pageSize:10,\r\n      total:0,\r\n      outtime:'',\r\n      visitorForm: {\r\n        vname:'',\r\n        vsex:'1',\r\n        vage:'',\r\n        vphone:'',\r\n        cid:'',\r\n        entertime:'',\r\n        outtime:'',\r\n        status:'1'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleSizeChange(val) {\r\n      console.log(`每页 ${val} 条`);\r\n      this.pageNum = 1;\r\n      this.pageSize = val;\r\n      this.loadPost();\r\n    },\r\n    handleCurrentChange(val) {\r\n      console.log(`当前页: ${val}`);\r\n      this.pageNum = val;\r\n      this.loadPost();\r\n    },\r\n    //将前端收到的date数据转换成标准格式\r\n    changeTime(date) {\r\n      let newDate = date.substring(0, 10);\r\n      let date2 = date.substring(12, 13);\r\n      let date4 = date.substring(13, 19);\r\n      let date3 = parseInt(date2) + 8;\r\n      let newTime = newDate + \" \" + date3 + date4;\r\n      return newTime;\r\n    },\r\n    loadPost() {\r\n      if (this.user != null && this.user.role == '2') {\r\n        this.$axios.post(this.$httpUrl + '/visitor/listAllPage',\r\n            {\r\n              pageNum: this.pageNum,\r\n              pageSize: this.pageSize,\r\n              param: {\r\n                vname: this.vname.trim(),\r\n                vsex: this.vsex\r\n              }\r\n            }\r\n        ).then(res => res.data).then(res => {\r\n          console.log(res);\r\n          if (res.code == 200) {\r\n            //设置表中游客时间\r\n            for (const item of res.data) {\r\n              console.log(this.changeTime(item.entertime));\r\n              if (item.entertime != null) {\r\n                item.entertime = this.changeTime(item.entertime);\r\n              }\r\n              if (item.outtime != null) {\r\n                item.outtime = this.changeTime(item.outtime);\r\n              }\r\n            }\r\n            this.tableData = res.data;\r\n            this.total = res.total;\r\n          } else {\r\n            alert(\"数据获取失败\");\r\n          }\r\n        });\r\n      } else {\r\n        this.$confirm('未登入请登录后再进入？', '提示', {\r\n          confirmButtonText: '确定去登入',//确认按钮文字显示\r\n          type: 'warning',\r\n          center: true,//文字居中\r\n          showCancelButton: false,//不显示取消按钮\r\n          closeOnClickModal: false,//是否可以点击空白处关闭弹窗\r\n        }).then(() => {\r\n          this.$router.push('/');\r\n          sessionStorage.clear();\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"大哥哥(姐姐)快去登录吧！！\"\r\n          });\r\n        });\r\n      }\r\n    },\r\n    resetParam() {\r\n      this.vname = '';\r\n      this.vsex = '';\r\n    },\r\n    Out(row){\r\n        //赋值到表单\r\n        this.visitorForm.vid = row.vid;\r\n        if(row.outtime == null){\r\n          this.visitorForm.outtime = new Date();\r\n        }else {\r\n          this.visitorForm.outtime = row.outtime;\r\n        }\r\n      this.$axios.post(this.$httpUrl + '/visitor/outVisitor',this.visitorForm)\r\n          .then(res => res.data).then(res => {\r\n        console.log(res);\r\n        if (res.code == 200) {\r\n          this.$message({\r\n            showClose: true,\r\n            message: '数据修改成功',\r\n            type: 'success'\r\n          });\r\n          this.loadPost();\r\n        } else {\r\n          this.$message({\r\n            showClose: true,\r\n            message: '数据修改失败',\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  beforeMount() {\r\n    this.loadPost();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}