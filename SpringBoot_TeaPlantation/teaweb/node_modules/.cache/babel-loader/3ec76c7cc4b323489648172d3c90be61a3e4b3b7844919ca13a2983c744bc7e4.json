{"ast":null,"code":"export default {\n  data: function () {\n    return {\n      oauth: {\n        signIn: false\n      },\n      web: this.$store.state.web,\n      form: {\n        account: \"\",\n        password: \"\"\n      },\n      remember_me: 1,\n      rules: {\n        //校验\n        account: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 16,\n          message: '长度在 5 到 16 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 16,\n          message: '长度在 6 到 16 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    sign_in() {\n      var f = this.form;\n      var form = {\n        password: f.password\n      };\n      var account = f.account + '';\n\n      // // 账号类型判断\n      // if (account.indexOf('@') !== -1) {\n      // \tform.email = account;\n      // } else if (/1[0-9]{10}/.test(account)) {\n      // \tform.phone = account;\n      // } else {\n      // \tform.username = account;\n      // }\n\n      // if(!this.form.account){\n      // \treturn this.$message.warning(\"请输入正确账号\")\n      // }else if(!this.form.password){\n      // \treturn this.$message.warning(\"请输入正确密码\")\n      // }\n\n      // var _this = this;\n\n      // // 查询用户\n      // this.$post('~/api/user/login?', form, (res) => {\n      // \tif (res.result && res.result.obj) {\n      //         var obj = res.result.obj;\n\n      // \t\t// 缓存用户\n      // \t\t_this.$store.commit('user_set', obj);\n\n      // \t\t// 存储用户\n      // \t\tif (_this.remember_me) {\n      // \t\t\t$.db.set('account', account);\n      // \t\t}\n\n      // \t\t// 获取权限\n      // \t\t_this.$get_auth(obj.user_group, ()=>{\n      // \t\t\tvar url = _this.$redirect();\n      // \t\t\t_this.$router.push(url || '/');\n      // \t\t})\n\n      // \t\t// 存储登录回来的用户信息\n      // \t\t$.db.set('user_group', JSON.stringify(res.result.obj) );\n\n      // \t} else if (res.error) {\n      // \t\tconsole.log(res.error);\n      // \t\t_this.$toast(res.error.message, 'error');\n      // \t}\n      // });\n    }\n  },\n\n  created() {}\n};","map":{"version":3,"names":["data","oauth","signIn","web","$store","state","form","account","password","remember_me","rules","required","message","trigger","min","max","methods","sign_in","f","created"],"sources":["src/components/login.vue"],"sourcesContent":["<template>\r\n\t<div class=\"login\">\r\n\t\t<article class=\"sign_in\">\r\n\t\t\t<el-row>\r\n\t\t\t\t<el-col>\r\n\t\t\t\t\t<el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"60px\" class=\"form\">\r\n\t\t\t\t\t\t<h1>永福茶园景观管理平台</h1>\r\n\r\n\t\t\t\t\t\t<el-form-item label=\"账号\" prop=\"account\">\r\n\t\t\t\t\t\t\t<el-input type=\"text\" v-model=\"form.account\" placeholder=\"用户名 / 手机 / 邮箱\">\r\n\t\t\t\t\t\t\t</el-input>\r\n\t\t\t\t\t\t</el-form-item>\r\n\r\n\t\t\t\t\t\t<el-form-item label=\"密码\" prop=\"password\">\r\n\t\t\t\t\t\t\t<el-input type=\"password\" v-model=\"form.password\" placeholder=\"6 到 16 个字符\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t</el-input>\r\n\t\t\t\t\t\t</el-form-item>\r\n\r\n\t\t\t\t\t\t<div class=\"btns\">\r\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"sign_in()\">登录</el-button>\r\n\t\t\t\t\t\t\t<router-link class=\"el-button el-button--primary\" to=\"./register\">注册</router-link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"btns1\">\r\n\t\t\t\t\t\t\t<router-link to=\"./forgot\"><p>忘记密码?</p></router-link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</el-form>\r\n\t\t\t\t</el-col>\r\n\t\t\t</el-row>\r\n\t\t</article>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\tdata: function () {\r\n\t\treturn {\r\n\t\t\toauth: {\r\n\t\t\t\tsignIn: false\r\n\t\t\t},\r\n\t\t\tweb: this.$store.state.web,\r\n\t\t\tform: {\r\n\t\t\t\taccount: \"\",\r\n\t\t\t\tpassword: \"\"\r\n\t\t\t},\r\n\t\t\tremember_me: 1,\r\n\t\t\trules: {//校验\r\n\t\t\t\taccount: [{\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmessage: '请输入账号',\r\n\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tmin: 5,\r\n\t\t\t\t\tmax: 16,\r\n\t\t\t\t\tmessage: '长度在 5 到 16 个字符',\r\n\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tpassword: [{\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmessage: '请输入密码',\r\n\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tmin: 6,\r\n\t\t\t\t\tmax: 16,\r\n\t\t\t\t\tmessage: '长度在 6 到 16 个字符',\r\n\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tsign_in() {\r\n\t\t\tvar f = this.form;\r\n\t\t\tvar form = {\r\n\t\t\t\tpassword: f.password\r\n\t\t\t};\r\n\t\t\tvar account = f.account + '';\r\n\r\n\t\t\t// // 账号类型判断\r\n\t\t\t// if (account.indexOf('@') !== -1) {\r\n\t\t\t// \tform.email = account;\r\n\t\t\t// } else if (/1[0-9]{10}/.test(account)) {\r\n\t\t\t// \tform.phone = account;\r\n\t\t\t// } else {\r\n\t\t\t// \tform.username = account;\r\n\t\t\t// }\r\n\r\n\r\n\t\t\t// if(!this.form.account){\r\n\t\t\t// \treturn this.$message.warning(\"请输入正确账号\")\r\n\t\t\t// }else if(!this.form.password){\r\n\t\t\t// \treturn this.$message.warning(\"请输入正确密码\")\r\n\t\t\t// }\r\n\r\n\r\n\t\t\t// var _this = this;\r\n\r\n\t\t\t// // 查询用户\r\n\t\t\t// this.$post('~/api/user/login?', form, (res) => {\r\n\t\t\t// \tif (res.result && res.result.obj) {\r\n\t\t\t//         var obj = res.result.obj;\r\n\r\n\t\t\t// \t\t// 缓存用户\r\n\t\t\t// \t\t_this.$store.commit('user_set', obj);\r\n\r\n\t\t\t// \t\t// 存储用户\r\n\t\t\t// \t\tif (_this.remember_me) {\r\n\t\t\t// \t\t\t$.db.set('account', account);\r\n\t\t\t// \t\t}\r\n\r\n\t\t\t// \t\t// 获取权限\r\n\t\t\t// \t\t_this.$get_auth(obj.user_group, ()=>{\r\n\t\t\t// \t\t\tvar url = _this.$redirect();\r\n\t\t\t// \t\t\t_this.$router.push(url || '/');\r\n\t\t\t// \t\t})\r\n\r\n\t\t\t// \t\t// 存储登录回来的用户信息\r\n\t\t\t// \t\t$.db.set('user_group', JSON.stringify(res.result.obj) );\r\n\r\n\r\n\t\t\t// \t} else if (res.error) {\r\n\t\t\t// \t\tconsole.log(res.error);\r\n\t\t\t// \t\t_this.$toast(res.error.message, 'error');\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\r\n\t},\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 大的背景样式 */\r\n.sign_in {\r\n\tbox-sizing: border-box;\r\n\theight: 100vh;\r\n\tpadding: .5rem;\r\n\twidth: 100%;\r\n\tbackground: url(../../public/img/bz.jpg) no-repeat;\r\n\tbackground-size: 100% 100%;\r\n\tcolor: #fff;\r\n}\r\n\r\n/* 登录居中 */\r\n.sign_in h1 {\r\n\ttext-align: center;\r\n}\r\n\r\n/* 登录框的位置 */\r\n.sign_in .btns {\r\n\ttext-align: center;\r\n\tmargin-left: 3rem;\r\n}\r\n\r\n/* 忘记密码的位置 */\r\n.sign_in .btns1 {\r\n\ttext-align: center;\r\n\tmargin-left: 3rem;\r\n\tmargin-top: .5rem;\r\n}\r\n\r\n/* 忘记密码的颜色 */\r\n.sign_in .btns1 p{\r\n\tcolor: #fff;\r\n}\r\n\r\n/* 登录框的大小 */\r\n.sign_in .btns .el-button {\r\n\twidth: 40%;\r\n}\r\n\r\n/* 账号密码的颜色 */\r\n.sign_in .el-form-item__label {\r\n\tcolor: #fff;\r\n}\r\n\r\n/* 小框的大小样式 */\r\n.sign_in .form {\r\n\tbox-sizing: border-box;\r\n\tpadding: 1rem 3rem;\r\n\tmargin: auto;\r\n\tmargin-top: 17rem;\r\n\twidth: 100%;\r\n\tmax-width: 25rem;\r\n\tbox-shadow: 0 0 0 1px hsla(240, 0%, 100%, .3) inset,\r\n\t\t0 .5em 1em rgba(50, 50, 50, 0.6);\r\n\ttext-shadow: 0 1px 1px hsla(240, 0%, 100%, .5);\r\n\toverflow: hidden;\r\n\t/* background-color: rgba(255, 255, 255, .5); */\r\n\tborder-radius: 0.5rem;\r\n}\r\n\r\n.sign_in .form:after {\r\n\tcontent: '';\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tbackground-color: rgba(255, 255, 255, 0.8);\r\n\tz-index: -1;\r\n\r\n\tbackground-image: url(../../public/img/bz.jpg);\r\n\tbackground-position: center top;\r\n\tbackground-size: cover;\r\n\tbackground-attachment: fixed;\r\n\t-webkit-filter: blur(20px);\r\n\t-moz-filter: blur(20px);\r\n\t-ms-filter: blur(20px);\r\n\t-o-filter: blur(20px);\r\n\tfilter: blur(20px);\r\n}</style>\r\n"],"mappings":"AAiCA;EACAA,IAAA,WAAAA,CAAA;IACA;MACAC,KAAA;QACAC,MAAA;MACA;MACAC,GAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,GAAA;MACAG,IAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,WAAA;MACAC,KAAA;QAAA;QACAH,OAAA;UACAI,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,GACA;UACAC,GAAA;UACAC,GAAA;UACAH,OAAA;UACAC,OAAA;QACA,EACA;QACAL,QAAA;UACAG,QAAA;UACAC,OAAA;UACAC,OAAA;QACA,GACA;UACAC,GAAA;UACAC,GAAA;UACAH,OAAA;UACAC,OAAA;QACA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,QAAA;MACA,IAAAC,CAAA,QAAAZ,IAAA;MACA,IAAAA,IAAA;QACAE,QAAA,EAAAU,CAAA,CAAAV;MACA;MACA,IAAAD,OAAA,GAAAW,CAAA,CAAAX,OAAA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAGA;MACA;MACA;MACA;MACA;;MAGA;;MAEA;MACA;MACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;MACA;;MAGA;MACA;MACA;MACA;MACA;IACA;EACA;;EACAY,QAAA,GAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}