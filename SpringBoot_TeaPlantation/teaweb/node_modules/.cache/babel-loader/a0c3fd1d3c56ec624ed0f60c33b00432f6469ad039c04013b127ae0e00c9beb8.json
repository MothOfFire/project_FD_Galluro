{"ast":null,"code":"//引用echarts\nimport * as echarts from 'echarts';\nexport default {\n  name: \"personnelVisualizationMain\",\n  data() {\n    return {\n      trafficList: [],\n      trafficDay: []\n    };\n  },\n  props: {},\n  methods: {\n    getTrafficList: function () {\n      this.$axios.get(this.$httpUrl + '/visualization/listTraffic').then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          for (const item of res.data) {\n            item.date = item.date.substring(0, 10);\n          }\n          this.trafficList = res.data;\n          for (let i = 0; i < res.total; i++) {\n            this.trafficDay[i] = res.data[i].date;\n          }\n          console.log(this.trafficDay);\n        } else {\n          alert(\"数据获取失败\");\n        }\n      });\n    }\n    // getDay(){\n    //   for (let i = 0; i<this.trafficList.length; i++){\n    //     this.trafficDay[i] = this.trafficList[i].date.substring(8,10);\n    //     console.log(this.trafficDay);\n    //   }\n    // }\n  },\n\n  mounted() {\n    this.getTrafficList();\n    let myEcharts = echarts.init(document.getElementById(\"myChart\"));\n    //设置参数\n    myEcharts.setOption({\n      title: {\n        //echarts的标题\n        text: '游客日流量图'\n      },\n      xAxis: {\n        type: 'category',\n        data: ['2023-3-15', '2023-3-17', '2023-3-19', '2023-3-20', '2023-3-20']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        //系列\n        name: '游客日流量图',\n        type: 'line',\n        data: this.trafficList\n      }]\n    });\n  }\n};","map":{"version":3,"names":["echarts","name","data","trafficList","trafficDay","props","methods","getTrafficList","$axios","get","$httpUrl","then","res","console","log","code","item","date","substring","i","total","alert","mounted","myEcharts","init","document","getElementById","setOption","title","text","xAxis","type","yAxis","series"],"sources":["src/components/visualization/personnelVisualizationMain.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"myChart\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//引用echarts\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  name: \"personnelVisualizationMain\",\r\n  data() {\r\n    return {\r\n      trafficList:[],\r\n      trafficDay:[]\r\n    }\r\n  },\r\n  props: {\r\n\r\n  },\r\n  methods: {\r\n    getTrafficList: function () {\r\n      this.$axios.get(this.$httpUrl+'/visualization/listTraffic')\r\n          .then(res=>res.data).then(res=>{\r\n            console.log(res);\r\n            if(res.code==200){\r\n              for (const item of res.data){\r\n                item.date = item.date.substring(0,10);\r\n              }\r\n              this.trafficList = res.data;\r\n              for (let i = 0; i<res.total; i++){\r\n                this.trafficDay[i] = res.data[i].date;\r\n              }\r\n              console.log(this.trafficDay);\r\n            }else {\r\n              alert(\"数据获取失败\");\r\n            }\r\n      });\r\n    },\r\n    // getDay(){\r\n    //   for (let i = 0; i<this.trafficList.length; i++){\r\n    //     this.trafficDay[i] = this.trafficList[i].date.substring(8,10);\r\n    //     console.log(this.trafficDay);\r\n    //   }\r\n    // }\r\n  },\r\n  mounted() {\r\n    this.getTrafficList();\r\n    let myEcharts = echarts.init(document.getElementById(\"myChart\"));\r\n        //设置参数\r\n        myEcharts.setOption({\r\n          title:{//echarts的标题\r\n            text:'游客日流量图'\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: ['2023-3-15', '2023-3-17', '2023-3-19','2023-3-20','2023-3-20']\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [{//系列\r\n            name:'游客日流量图',\r\n            type:'line',\r\n            data:this.trafficList\r\n          }]\r\n        });\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n #myChart {\r\n   width: 500px;\r\n   height: 500px;;\r\n   border: 1px #000 solid;\r\n }\r\n</style>"],"mappings":"AAOA;AACA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,UAAA;IACA;EACA;EACAC,KAAA,GAEA;EACAC,OAAA;IACAC,cAAA,WAAAA,CAAA;MACA,KAAAC,MAAA,CAAAC,GAAA,MAAAC,QAAA,iCACAC,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAV,IAAA,EAAAS,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,IAAAA,GAAA,CAAAG,IAAA;UACA,WAAAC,IAAA,IAAAJ,GAAA,CAAAV,IAAA;YACAc,IAAA,CAAAC,IAAA,GAAAD,IAAA,CAAAC,IAAA,CAAAC,SAAA;UACA;UACA,KAAAf,WAAA,GAAAS,GAAA,CAAAV,IAAA;UACA,SAAAiB,CAAA,MAAAA,CAAA,GAAAP,GAAA,CAAAQ,KAAA,EAAAD,CAAA;YACA,KAAAf,UAAA,CAAAe,CAAA,IAAAP,GAAA,CAAAV,IAAA,CAAAiB,CAAA,EAAAF,IAAA;UACA;UACAJ,OAAA,CAAAC,GAAA,MAAAV,UAAA;QACA;UACAiB,KAAA;QACA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EACAC,QAAA;IACA,KAAAf,cAAA;IACA,IAAAgB,SAAA,GAAAvB,OAAA,CAAAwB,IAAA,CAAAC,QAAA,CAAAC,cAAA;IACA;IACAH,SAAA,CAAAI,SAAA;MACAC,KAAA;QAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAC,IAAA;QACA7B,IAAA;MACA;MACA8B,KAAA;QACAD,IAAA;MACA;MACAE,MAAA;QAAA;QACAhC,IAAA;QACA8B,IAAA;QACA7B,IAAA,OAAAC;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}